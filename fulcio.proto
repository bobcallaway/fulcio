//
// Copyright 2022 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package dev.sigstore.fulcio.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/sigstore/fulcio/pkg/generated/protobuf";

service CA {
    /**
     * Returns information about the current state of the transparency log
     */
    rpc GetSigningCert(CertificateRequest) returns (CertificateResponse){
        option (google.api.http) = {
          post: "/api/v1/signingCert"
          body: "*"
        };
    }
    /**
     * Returns the public key that can be used to validate the signed tree head
     */
    rpc GetRootCertificate(google.protobuf.Empty) returns (RootCertificateResponse){
        option (google.api.http) = {
          get: "/api/v1/rootCert"
        };
    }
    /**
     * Returns the current version information for this Fulcio instance
     */
    rpc Version(google.protobuf.Empty) returns (VersionResponse){
        option (google.api.http) = {
          get: "/api/v1/version"
        };
    }
}

message CertificateRequest {
    string OIDCIdentityToken = 1; // The OIDC token that identifies the caller
    PublicKey publicKey      = 2; // The public key to be stored in the requested certificate
    bytes signedEmailAddress = 3; // Proof that the client possesses the private key
}

message PublicKey {
    string algorithm = 1; // The cryptographic algorithm to use with the key material
    bytes content    = 2; // DER or PEM encoded public key
}

message CertificateResponse {
    /*
     * The signed certificate timestamp is a promise for including the certificate in
     * a certificate transparency log. It can be "stapled" to verify the inclusion of
     * a certificate in log in an offline fashion.
     */
    bytes signedCertificateTimestamp = 1;
    /*
     * The full certificate chain, serialized with the leaf certificate first followed
     * by all subsequent certificates (finishing with the root certificate).
     */
    string certificate = 2;
}

message RootCertificateResponse {
    string certificate = 1; // The root certificate for this Fulcio instance
}

message VersionResponse {
    string version   = 1; // The version string for the running instance of Fulcio
    string commit    = 2; // The git commit from which the running instance of Fulcio was built
    string treestate = 3; // The state of the git tree when this Fulcio instance was built
    string builddate = 4; // The date which this Fulcio instance was compiled
}
